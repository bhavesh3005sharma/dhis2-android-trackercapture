// Generated by Dagger (https://google.github.io/dagger).
package dhis2.org.analytics.charts.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dhis2.org.analytics.charts.mappers.AnalyticTeiSettingsToSettingsAnalyticsModel;
import dhis2.org.analytics.charts.mappers.AnalyticsTeiSettingsToGraph;
import dhis2.org.analytics.charts.providers.ChartCoordinatesProvider;
import dhis2.org.analytics.charts.providers.NutritionDataProvider;
import dhis2.org.analytics.charts.providers.PeriodStepProvider;
import javax.inject.Provider;

public final
class ChartsModule_ProvideAnalyticsSettingsToGraph$dhis_android_analytics_dhisDebugFactory
    implements Factory<AnalyticsTeiSettingsToGraph> {
  private final ChartsModule module;

  private final Provider<AnalyticTeiSettingsToSettingsAnalyticsModel>
      analyticsSettingsMapperProvider;

  private final Provider<NutritionDataProvider> nutritionDataProvider;

  private final Provider<PeriodStepProvider> periodStepProvider;

  private final Provider<ChartCoordinatesProvider> chartCoordinatesProvider;

  public ChartsModule_ProvideAnalyticsSettingsToGraph$dhis_android_analytics_dhisDebugFactory(
      ChartsModule module,
      Provider<AnalyticTeiSettingsToSettingsAnalyticsModel> analyticsSettingsMapperProvider,
      Provider<NutritionDataProvider> nutritionDataProvider,
      Provider<PeriodStepProvider> periodStepProvider,
      Provider<ChartCoordinatesProvider> chartCoordinatesProvider) {
    this.module = module;
    this.analyticsSettingsMapperProvider = analyticsSettingsMapperProvider;
    this.nutritionDataProvider = nutritionDataProvider;
    this.periodStepProvider = periodStepProvider;
    this.chartCoordinatesProvider = chartCoordinatesProvider;
  }

  @Override
  public AnalyticsTeiSettingsToGraph get() {
    return Preconditions.checkNotNull(
        module.provideAnalyticsSettingsToGraph$dhis_android_analytics_dhisDebug(
            analyticsSettingsMapperProvider.get(),
            nutritionDataProvider.get(),
            periodStepProvider.get(),
            chartCoordinatesProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ChartsModule_ProvideAnalyticsSettingsToGraph$dhis_android_analytics_dhisDebugFactory
      create(
          ChartsModule module,
          Provider<AnalyticTeiSettingsToSettingsAnalyticsModel> analyticsSettingsMapperProvider,
          Provider<NutritionDataProvider> nutritionDataProvider,
          Provider<PeriodStepProvider> periodStepProvider,
          Provider<ChartCoordinatesProvider> chartCoordinatesProvider) {
    return new ChartsModule_ProvideAnalyticsSettingsToGraph$dhis_android_analytics_dhisDebugFactory(
        module,
        analyticsSettingsMapperProvider,
        nutritionDataProvider,
        periodStepProvider,
        chartCoordinatesProvider);
  }

  public static AnalyticsTeiSettingsToGraph
      proxyProvideAnalyticsSettingsToGraph$dhis_android_analytics_dhisDebug(
          ChartsModule instance,
          AnalyticTeiSettingsToSettingsAnalyticsModel analyticsSettingsMapper,
          NutritionDataProvider nutritionDataProvider,
          PeriodStepProvider periodStepProvider,
          ChartCoordinatesProvider chartCoordinatesProvider) {
    return Preconditions.checkNotNull(
        instance.provideAnalyticsSettingsToGraph$dhis_android_analytics_dhisDebug(
            analyticsSettingsMapper,
            nutritionDataProvider,
            periodStepProvider,
            chartCoordinatesProvider),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
