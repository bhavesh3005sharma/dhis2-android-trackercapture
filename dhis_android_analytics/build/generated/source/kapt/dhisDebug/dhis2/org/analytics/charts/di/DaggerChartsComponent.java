// Generated by Dagger (https://google.github.io/dagger).
package dhis2.org.analytics.charts.di;

import dagger.internal.Preconditions;
import dhis2.org.analytics.charts.Charts;
import dhis2.org.analytics.charts.ChartsRepository;
import dhis2.org.analytics.charts.DhisAnalyticCharts;
import dhis2.org.analytics.charts.mappers.AnalyticTeiSettingsToSettingsAnalyticsModel;
import dhis2.org.analytics.charts.mappers.AnalyticsTeiSettingsToGraph;
import dhis2.org.analytics.charts.mappers.DataElementToGraph;
import dhis2.org.analytics.charts.mappers.ProgramIndicatorToGraph;
import dhis2.org.analytics.charts.providers.ChartCoordinatesProvider;
import dhis2.org.analytics.charts.providers.PeriodStepProvider;

public final class DaggerChartsComponent implements ChartsComponent {
  private ChartsModule chartsModule;

  private Charts.Dependencies dependencies;

  private DaggerChartsComponent(Builder builder) {
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  private AnalyticTeiSettingsToSettingsAnalyticsModel
      getAnalyticTeiSettingsToSettingsAnalyticsModel() {
    return ChartsModule_ProvideAnalyticSettingsMapper$dhis_android_analytics_dhisDebugFactory
        .proxyProvideAnalyticSettingsMapper$dhis_android_analytics_dhisDebug(
            chartsModule,
            ChartsModule_ProvideAnalyticDataElementMapper$dhis_android_analytics_dhisDebugFactory
                .proxyProvideAnalyticDataElementMapper$dhis_android_analytics_dhisDebug(
                    chartsModule),
            ChartsModule_ProvideAnalyticIndicatorMapper$dhis_android_analytics_dhisDebugFactory
                .proxyProvideAnalyticIndicatorMapper$dhis_android_analytics_dhisDebug(
                    chartsModule));
  }

  private PeriodStepProvider getPeriodStepProvider() {
    return ChartsModule_PeriodStepProvider$dhis_android_analytics_dhisDebugFactory
        .proxyPeriodStepProvider$dhis_android_analytics_dhisDebug(
            chartsModule,
            Preconditions.checkNotNull(
                dependencies.getD2(), "Cannot return null from a non-@Nullable component method"));
  }

  private ChartCoordinatesProvider getChartCoordinatesProvider() {
    return ChartsModule_ChartCoordinatesProvider$dhis_android_analytics_dhisDebugFactory
        .proxyChartCoordinatesProvider$dhis_android_analytics_dhisDebug(
            chartsModule,
            Preconditions.checkNotNull(
                dependencies.getD2(), "Cannot return null from a non-@Nullable component method"));
  }

  private AnalyticsTeiSettingsToGraph getAnalyticsTeiSettingsToGraph() {
    return ChartsModule_ProvideAnalyticsSettingsToGraph$dhis_android_analytics_dhisDebugFactory
        .proxyProvideAnalyticsSettingsToGraph$dhis_android_analytics_dhisDebug(
            chartsModule,
            getAnalyticTeiSettingsToSettingsAnalyticsModel(),
            ChartsModule_NutritionDataProvider$dhis_android_analytics_dhisDebugFactory
                .proxyNutritionDataProvider$dhis_android_analytics_dhisDebug(chartsModule),
            getPeriodStepProvider(),
            getChartCoordinatesProvider());
  }

  private DataElementToGraph getDataElementToGraph() {
    return ChartsModule_ProvideDataElementToGraph$dhis_android_analytics_dhisDebugFactory
        .proxyProvideDataElementToGraph$dhis_android_analytics_dhisDebug(
            chartsModule, getPeriodStepProvider(), getChartCoordinatesProvider());
  }

  private ProgramIndicatorToGraph getProgramIndicatorToGraph() {
    return ChartsModule_ProvideIndicatorToGraph$dhis_android_analytics_dhisDebugFactory
        .proxyProvideIndicatorToGraph$dhis_android_analytics_dhisDebug(
            chartsModule, getPeriodStepProvider(), getChartCoordinatesProvider());
  }

  private ChartsRepository getChartsRepository() {
    return ChartsModule_ProvideChartRepository$dhis_android_analytics_dhisDebugFactory
        .proxyProvideChartRepository$dhis_android_analytics_dhisDebug(
            chartsModule,
            Preconditions.checkNotNull(
                dependencies.getD2(), "Cannot return null from a non-@Nullable component method"),
            getAnalyticsTeiSettingsToGraph(),
            getDataElementToGraph(),
            getProgramIndicatorToGraph());
  }

  private DhisAnalyticCharts getDhisAnalyticCharts() {
    return new DhisAnalyticCharts(getChartsRepository());
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {
    this.chartsModule = builder.chartsModule;
    this.dependencies = builder.dependencies;
  }

  @Override
  public Charts charts() {
    return ChartsModule_BindStorageFeatureImpl$dhis_android_analytics_dhisDebugFactory
        .proxyBindStorageFeatureImpl$dhis_android_analytics_dhisDebug(
            chartsModule, getDhisAnalyticCharts());
  }

  public static final class Builder {
    private ChartsModule chartsModule;

    private Charts.Dependencies dependencies;

    private Builder() {}

    public ChartsComponent build() {
      if (chartsModule == null) {
        this.chartsModule = new ChartsModule();
      }
      if (dependencies == null) {
        throw new IllegalStateException(
            Charts.Dependencies.class.getCanonicalName() + " must be set");
      }
      return new DaggerChartsComponent(this);
    }

    public Builder chartsModule(ChartsModule chartsModule) {
      this.chartsModule = Preconditions.checkNotNull(chartsModule);
      return this;
    }

    public Builder dependencies(Charts.Dependencies dependencies) {
      this.dependencies = Preconditions.checkNotNull(dependencies);
      return this;
    }
  }
}
